@model OnboardingManagement.Models.ProjectAssignment
<div id="dialog">
</div>
<div>
    @Html.Partial("_HeadNavBar")
</div>
<div>
    @Html.Partial("_Toolbar")
</div>
@using (Html.BeginForm("Create", "ProjectAssignment", FormMethod.Post))
{
    <center>
        <div class="form-group">

            <h3 style="color:darkblue ;font-style:oblique">Project Add</h3><br />
            <br />
            <div class="col-lg-6 col-lg-offset-3" style="background-color:lemonchiffon ; border:groove;">
                <br /><br />
                <div class="row">
                    <div class="col-lg-4">
                        @Html.Label("Select Onboarder:")
                    </div>
                    <div class="col-lg-4">
                        @(Html.Kendo().DropDownListFor(p => Model.O_Id)
                           .Name("O_Id")
                           .DataTextField("O_Name")
                           .DataValueField("O_Id")
                           .DataSource(source =>
                           {
                               source.Read(read =>
                               {
                                   read.Action("GetAllOnboarders", "Onboarder");
                               });
                           })
                          .Filter("contains")
                          .HtmlAttributes(new { style = "width: 100%" })
                          .Events(e => e.Change("GetProjectSuggestion"))
                        )
                    </div>
                </div><br />
                <!--End of first row-->
                <div class="row">
                    <div class="col-lg-4">
                        @Html.Label("Select Project:")
                    </div>
                    <div class="col-lg-4">
                        @(Html.Kendo().DropDownListFor(p => Model.P_Id)
                           .Name("P_Id")
                           .DataTextField("P_Name")
                           .DataValueField("P_Id")
                           .DataSource(source =>
                           {
                               source.Read(read =>
                               {
                                   read.Action("GetAllProjects", "Project");
                               });
                           })
                          .Filter("contains")
                          .HtmlAttributes(new { style = "width: 100%" })
                        )
                    </div>
                </div><br />
                <!--End of second row-->
                <div class="row">
                    <div class="col-lg-4">
                        @Html.Label("Select Mentor:")
                    </div>
                    <div class="col-lg-4">
                        @(Html.Kendo().DropDownListFor(p => Model.M_Id)
                           .Name("M_Id")
                           .DataTextField("M_Name")
                           .DataValueField("M_Id")
                           .DataSource(source =>
                           {
                               source.Read(read =>
                               {
                                   read.Action("GetAllMentors", "Mentor");
                               });
                           })
                          .Filter("contains")
                          .HtmlAttributes(new { style = "width: 100%" })
                        )
                    </div>
                </div><br />
                <!--End of third row-->
                <div class="row">
                    <div class="col-lg-4">
                        @Html.Label("Enter Rotation Number")
                    </div>
                    <div class="col-lg-4">
                        @(Html.Kendo().NumericTextBoxFor(p => Model.PA_Rotation_Num)
                        .Name("PA_Rotation_Num").Min(1).Max(4)
                        )
                    </div>
                </div><br />
                <!--End of fourth row-->
                <div class="row">
                    <div class="col-lg-4">
                        @Html.Label("Enter Start Date")
                    </div>
                    <div class="col-lg-4">
                        @(Html.Kendo().DatePickerFor(p => Model.PA_Start_Date)
                        .Name("PA_Start_Date")
                        .Value(DateTime.Now)
                        .Culture("es-MX")
                        .Events(e=> e.Change("change"))
                        )
                    </div>
                </div><br />
                <!--End of fifth row-->
                <div class="row">
                    <div class="col-lg-4">
                        @Html.Label("Enter End Date")
                    </div>
                    <div class="col-lg-4">
                        @(Html.Kendo().DatePickerFor(p => Model.PA_End_Date)
                        .Name("PA_End_Date")
                        .Value(DateTime.Now.Date.AddMonths(6))
                        .Culture("es-MX")
                        )
                    </div>
                </div><br />
                <!--End of sixth row-->
                <div class="row">
                    <div class="col-lg-4">

                    </div>
                    <div class="col-lg-4">
                        <button class="btn btn-lg btn-primary" type="submit">Create</button>
                    </div>
                </div><br />@ViewBag.msg
            </div>
        </div>
    </center>
}


<div id="window">
    <div id="grid"></div>
</div>

<script>
    function change() {
        var date = new Date(this.value());
        date.setMonth(date.getMonth() + 6);
        $("#PA_End_Date").data('kendoDatePicker').value(date);
        
    }
    function onChange(arg) { 
        var selected = $.map(this.select(), function (item) {
            return $(item).text();
        }); 
        var projectid = selected.join("tr");
        var id = projectid[0] + projectid[1]

        $.ajax({
            url: "/Project/GetAllProjects",
            type: "GET",
            dataType: "json",
            traditional: true,
            contentType: "application/json; charset=utf-8",
            success: function (data) {
               
                for (i = 0; i < data.length; i++) {
                    if (data[i].P_Id == id) {

                        var dropdownlist = $("#P_Id").data("kendoDropDownList");
                        dropdownlist.select(i);
                        myWindow.data("kendoWindow").close();
                       
                    }
                }
            },
            error: function (err) {

            }
        });




        
   

    }

    var myWindow = $("#window");
    myWindow.kendoWindow({
        width: "600px",
        title: "Suggestions for Assigning project",
        visible: false,
        actions: [
            "Pin",
            "Minimize",
            "Maximize",
            "Close"
        ],
        close: onClose
    }).data("kendoWindow").center();

   

   function GetProjectSuggestion() {
        var ids = this.value()
        getRotationNo(ids);
        $.ajax({
            url: "/ProjectAssignment/GetProjectSuggestion/" + ids,
            type: "GET",
            dataType: "json",
            traditional: true,
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                

                $("#grid").kendoGrid({
                    dataSource: data,
                    selectable: "row",
                    change: onChange,
                    height: 350,
                    columns: [
                        {
                            field: "P_Id",
                            title: "Project Id"
                        },
                        {
                            field: "P_Name",
                            title: "Name",
                        },
                        {
                            field: "P_Technology",
                            title: "Technology",
                        }
                    ]
                });



            

                var projects = "";
                var msg = "<table height=300 width=300>";
                msg = msg + "<tr>";
                msg = msg + "<th>Project Name</th> <th> Technology</th>";

                msg = msg + "</tr>";

                for (var i = 0; i < data.length; i++) {
                    msg = msg + "<tr>";
                    msg = msg + "<td>" + data[i].P_Name + "</td>";
                    msg = msg + "<td>" + data[i].P_Technology + "</td>";
                    msg = msg + "</tr>";

                    // msg = msg + "<li>" + data[i].P_Name + "  --  " + data[i].P_Technology + "  --  </li>";
                    //  projects = projects + "  " + data[i].P_Name + "  --  " + data[i].P_Technology + "\n";
                }
                msg = msg + "</table>"

              //  $("#window").html(msg);
                myWindow.data("kendoWindow").open();


            },
            error: function (err) {
                alert("An error has occured!!!" + JSON.stringify(err));
            }
        });





    }

   function GetProjects(id) {
       $.ajax({
           url: "/Project/GetAllProjects",
           type: "GET",
           dataType: "json",
           traditional: true,
           contentType: "application/json; charset=utf-8",
           success: function (data) {
               debugger

               for (i = 0; i < data.length; i++) {
                   if (data[i].P_Id == id) {
                      
                       return i + "";
                   }
               }
           },
           error: function (err) {

           }
       });
   }

  

    function getRotationNo(id) {
        debugger
        var id1 = id;
        $.ajax({
           
            url: "/ProjectAssignment/GetRotationNo/" +id1,
            type: "GET",
            dataType: "json",
            traditional: true,
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                     
                var numerictextbox = $("#PA_Rotation_Num").data("kendoNumericTextBox");
                numerictextbox.value(JSON.stringify(data));
                

            },
            error: function (err) {
                alert("An error has occured!!!" + JSON.stringify(err));
            }
        });

    }

    function onClose() {

    }
</script>

<style>
    #example {
        min-height: 500px;
    }

    #undo {
        text-align: center;
        position: absolute;
        white-space: nowrap;
        padding: 1em;
        cursor: pointer;
    }

    .armchair {
        float: left;
        margin: 30px 30px 120px 30px;
        text-align: center;
    }

        .armchair img {
            display: block;
            margin-bottom: 10px;
        }

    .k-window-content a {
        color: #BBB;
    }

    .k-window-content p {
        margin-bottom: 1em;
    }
</style>


