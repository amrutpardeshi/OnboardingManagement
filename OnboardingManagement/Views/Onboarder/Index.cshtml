@model OnboardingManagement.Models.Onboarder
<script>
    
    function getStudent(){
        debugger;
        $.ajax({
            url: "/Onboarder/getOnboarder",
            type: "POST",
            data: JSON.stringify({ 'id': this.value()}),
            dataType: "json",
            traditional: true,
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //alert(JSON.stringify(data))
                debugger
                $("#onboardId").val(data.O_Id).change();

                $("#Onboard_Name").val(data.O_Name);

            },
            error: function () {
                alert("An error has occured!!!");
            }
        });          
    }

  
    
</script>
<div class="container-fluid">
    <h1>OnBoarders</h1>
    <div class="row">

        @*Add onboarder Form*@
        <div class="col-sm-4">
            @using (Html.BeginForm("Add", "Onboarder"))
            { 
                <div class="row">
                    <div class="col-sm-3"></div>
                    <div class="col-sm-8"><h3>New Onboarder</h3></div>
                </div>
           
                <div class="row">
                    <div class="col-sm-6"><h4>@Html.Label("OnBoarder Name")</h4></div>
                    <div class="col-sm-6">@Html.Kendo().TextBoxFor(m => Model.O_Name)</div>              
                </div>

                <div class="row">
                    <div class="col-sm-6"><h4>@Html.Label("Reporting Manager:")</h4></div>
                    <div class="col-sm-6">@(Html.Kendo().DropDownListFor(p => Model.O_Id)
                               .Name("RM_Id")
                               .DataTextField("RM_Name")
                               .DataValueField("RM_Id")
                               .DataSource(source =>
                               {
                                   source.Read(read =>
                                   {
                                       read.Action("GetAllReportingManager", "ReportingManager");
                                   });
                               })
                              .Filter("contains")
                              .HtmlAttributes(new { style = "width: 100%" })
                    )</div>
                    <div class="row">
                        <div class="col-sm-6"> </div>
                        <div class="col-sm-6 content"><button class="btn btn-lg btn-primary" type="submit">Add</button></div>
                    </div>
                </div>
            }

        </div>
        @*End of First Coloumn of first row*@

        
        
        @*Update onboarder form*@
        <div class="col-sm-4" style="background-color:lavenderblush;">
        
            
            <div class="row">
                <div class="col-sm-3"></div>
                <div class="col-sm-8"><h3>Change Onboarder Info</h3></div>
            </div>
          
            @*Dropdown to select onboarder which is to be updated*@
            <div class="row">
                <div class="col-sm-3"><h4>@Html.Label("Select Onboarder")</h4></div>
                <div class="col-sm-8">@(Html.Kendo().DropDownListFor(p => Model.O_Id)
                           .Name("O_Id")
                           .DataTextField("O_Name")
                           .DataValueField("O_Id")
                           .DataSource(source =>
                           {
                               source.Read(read =>
                               {
                                   read.Action("GetAllOnboarders", "Onboarder");
                               });
                           })
                          .Filter("contains")
                          .HtmlAttributes(new { style = "width: 100%" }).Events(e => e.Change("getStudent"))
                )</div>
            </div>

            @using (Html.BeginForm("Update", "Onboarder"))
            {
                <div class="row">
                    <div class="col-sm-3"><h4>@Html.Label("OnBoarder Id")</h4></div>
                    <div class="col-sm-8">@Html.Kendo().TextBox().Name("onboardId").Enable(false)</div>
                </div>

                @*Edit Box for Onboarder Name*@
                <div class="row">
                    <div class="col-sm-3"><h4>@Html.Label("OnBoarder Name")</h4></div>
                    <div class="col-sm-8">@Html.Kendo().TextBox().Name("Onboard_Name")</div>
                </div>
                
                @*Dropdown to select new Reporting manager *@
                <div class="row">
                        <div class="col-sm-6"><h4>@Html.Label("Reporting Manager:")</h4></div>
                        <div class="col-sm-6">
                           @(Html.Kendo().DropDownListFor(p => Model.O_Id)
                               .Name("ReportingManagerID")
                               .DataTextField("RM_Name")
                               .DataValueField("RM_Id")
                               .DataSource(source =>
                               {
                                   source.Read(read =>
                                   {
                                       read.Action("GetAllReportingManager", "ReportingManager");
                                   });
                               })
                              .Filter("contains")
                              .HtmlAttributes(new { style = "width: 100%" })
                        )
                    </div>
               
                </div>

                <div class="row">
                    <div class="col-sm-3"></div>
                    <div class="col-sm-8"><button class="btn btn-lg btn-primary" type="submit">Change</button></div>
                </div>
            }


        </div>
        @*End of Second coloumn of first row*@


        <div class="col-sm-4" style="background-color:lavender;">
           
           
        </div>
        @*End of Third colmn of first row*@
    </div>
    @*End of first Row*@
</div>











@*@(Html.Kendo().Grid<OnboardingManagement.Models.Onboarder>()
          .Name("grid")
          .Columns(columns =>
          {
              columns.Bound(c => c.O_Name);
              columns.Bound(c => c.O_Rotation_Num);
              columns.ForeignKey(c => c.RM_Id, (System.Collections.IEnumerable)ViewData["ReportingManager"], dataFieldText: "RM_Name", dataFieldValue: "RM_Id").Title("Reporting Manager");
              columns.Command(command => { command.Edit(); command.Destroy(); }).Width(180);
          })
          .ToolBar(toolbar => {
              toolbar.Create();
          })
          .Editable(editable => editable.Mode(GridEditMode.InLine))
          .Pageable()
          .Scrollable(scrollable => scrollable.Enabled(false))
          .DataSource(dataSource => dataSource
              .Ajax()
              .Model(model => model.Id(p => p.O_Id))
              .Read(read => read.Action("Onboarders_Read", "Onboarder"))
              .Create(create => create.Action("Onboarders_Create", "Onboarder"))
              .Update(update => update.Action("Onboarders_Update", "Onboarder"))
              .Destroy(destroy => destroy.Action("Onboarders_Destroy", "Onboarder"))
          )
    )
*@